<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SkylineBin的技术成长之路</title>
    <description>A blog about skylinebin ...</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Sat, 04 Feb 2023 17:25:23 +0800</pubDate>
    <lastBuildDate>Sat, 04 Feb 2023 17:25:23 +0800</lastBuildDate>
    <generator>Jekyll v4.3.2</generator>
    
      <item>
        <title>一个节点 继续前行 (2021年终总结)</title>
        <description>&lt;h3 id=&quot;写在前面&quot;&gt;写在前面&lt;/h3&gt;

&lt;p&gt;2021年的12月，在做春节相关的项目，节奏紧凑且身心俱疲，没有能按时完成这已经延续五年的总结，心中对失去的这个“仪式感”充满介怀。2022年1月中旬，心中有些过意不去，写过一些小片段，又因为种种原因，没能完成。直到2022年五一假期，在被封了快五十天后，之前的介怀又慢慢出现了，不写总觉得亏欠些什么，况且也快到五四了。挺久没写自己相关的总结了，文字或许会有些笨拙，和之前的很多篇一样，主要是写给自己看，是属于自己对自己的交代。&lt;/p&gt;

&lt;h3 id=&quot;工作相关&quot;&gt;工作相关&lt;/h3&gt;

&lt;p&gt;过去的一年，自己对工作的体验和感受和2020年截然不同。工作上参与业务的重心从B端转移到了C端，过去一年都主要从事一些用户侧相关的开发。与之前不同，C端的需求节奏更快，也相对更有意思。从3月做的第一个互动活动开始，到年底的春节活动，算下来中间基本每月都能匀到一个倒排的需求，每个周期持续两到三周，只有提测上线之后的那段时间能稍微缓一缓。&lt;/p&gt;

&lt;p&gt;这种节奏的工作，总会伴随着一些变化，自己也从中学到了很多。其中最明显的变化是，自己参与的沟通更多了，能确定和把握的工作细节也更多了。逐渐开始熟悉这一类业务的开发模式，有了更多的沟通会，能够根据经验给到产品和运营更多评估的结果。&lt;/p&gt;

&lt;p&gt;工作承担的职责也逐渐有了变化，开发三月第一个需求时还是参与人员，仅需要完成负责的模块，到九月时逐渐能负责整个需求带两个新同学做完同等量级的项目，年底时基本独立负责了春节项目。所做需求的参与人数覆盖了20万，200万，2000万，也有了PV过亿，这些都是自己之前不能想象的。当然，规模和效果很大程度上归功于平台，也少不了带自己熟悉业务开发的同学，但自己投入的精力，做过的事情，参与的过程都是清晰的。这也给自己带来了比较重要的一点变化：自己做过的事情一定程度上能让自己相信自己可以做到哪些，也能支撑自己做更多的事情。&lt;/p&gt;

&lt;p&gt;除了正面的部分，也有一些工作的问题暴露出来，工作的经验还是有些欠缺，有了第一个Notice的事故通报。情绪也在高压的工作环境中险些失控控制，这些都是2021年发生过的，既真实又深刻。&lt;/p&gt;

&lt;h3 id=&quot;对互联网公司的一些感受&quot;&gt;对互联网公司的一些感受&lt;/h3&gt;

&lt;p&gt;过去的一年，结合自己的亲身经历和从同学那里了解到的，对大多数互联网公司的特征整体多了一些理解。&lt;/p&gt;

&lt;p&gt;工作节奏上，我了解到国内在互联网公司的工作的同学，每天的工作时长基本还是10~12小时左右，而自己工作日基本都是晚上九点半到十点半到家，回家之后的总要缓上半小时才肯洗漱躺着，睡着基本都是到了十二点半左右。每天的工作时间并不是总能由自己控制，有时工作日下午的时间总是被各种需要对齐细节的会议占满，只能晚上写代码和文档，也有时会出现线上问题需要紧急排查修复，可能忙完会错过了吃饭/下班时间。在去年七月取消大小周之后，才真正体验了到有每个完整双休的快乐，虽说有时候周末也需要线上Oncall，在去年十二月项目紧迫时，有过连着两周周末加一天班的经历，身体真的会吃不消，之后需要很久才会缓过来，好在这种经历不是特别多。去年互联网公司出过几次新闻，每次有新闻的那几天，同事们总是心照不宣地早些下班，但没过多久又会回到之前的节奏。有时候自己也在想，这种工作节奏还会持续多久，自己又能坚持多久，是不是每个行业都会有独特的节奏和必须要承受的压力。&lt;/p&gt;

&lt;p&gt;此外，互联网公司的管理风格上都比较粗糙和凌乱，产品规划上变动也相对频繁，每一任管理者都有自己的侧重点，而管理者也会变动，这就导致了一些方向会被废弃掉，很不幸过去一年自己也遇到过一个需求在已经做完快上线的时候被相关方的领导卡住，认为存在问题不允许上线的情况，实属有些心痛。&lt;/p&gt;

&lt;p&gt;整体工作岗位也存在一些不确定性，过去一年和我对接过的产品与运营同学我知道的已经有三位离职了，对接的开发也有两三人转岗到了其他部门。人员频繁流动，就不得不调整心理预期，也就需要一遍遍地同步背景，每一次和新的同学对接，总会想起那句“在互联网公司里，是每台电脑会配一个人，并不是每人发了一台电脑”，因为可能电脑还在，人已经走了。&lt;/p&gt;

&lt;p&gt;当然，也有好的一面，比如合作的同事(同学)大多都比较专业，对自己的职责所在都很负责，理解能力和同理心都很强，交流起来没有压力等等。这些感受在过去一年变得十分真切，在之后的几年也需要调整心态去接受以及适应。&lt;/p&gt;

&lt;h3 id=&quot;生活相关&quot;&gt;生活相关&lt;/h3&gt;

&lt;p&gt;有了自己独立生活之后，逐渐觉得不能对其他任何人有过高的要求，基于情境和现状来做出反应可能更简单。基于这一点，基本能和挺多过去在意的事情和解，能够充满热情和善意地关心，这是好好生活的进步。&lt;/p&gt;

&lt;p&gt;随着舒曼回来，近万公里的异地也终于告一段落了。十月之后的生活，像是透过云层照进了阳光，给原本单调的生活添加了很多色彩。有熟悉的人陪伴，很多事情就容易很多，可以一起逛逛公园，买菜做饭洗碗，一起玩健身环、双人成行、GTA5，看《甄嬛传》（获得了“甄学博士”称号）。甚至也有过一段时间，早上一起上班，周五晚上一起下班的经历，有了陪伴，工作的痛苦也没那么容易接受了。因为了解，可以经常一起聊一些有意思的话题，坦诚地分享自己的观点，了解不同的思维逻辑，这些都是之前不曾有过的，真诚谢谢阿曼。&lt;/p&gt;

&lt;h3 id=&quot;输入与输出&quot;&gt;输入与输出&lt;/h3&gt;

&lt;p&gt;2021年只读了十本书，一半是科幻，还有几本是填之前挖下的坑，关于总结和想法的输出更是不成体系，实属有些少了。阅读的时间其实还是有的，可能需要多一些自律和静下来的心思。另外，工作上相关的输入大多也仅为了工作所用，没能有太多与兴趣相关的输入，除了工作相关的文档，也没有能拿得出来讲解的输出，其实和这篇总结一样，自己也一直在心里默默担忧着这些。特别是开始面试其他人之后，真心能感觉到系统地转换输入到自己理解的输出，是很重要的一项技能。在不影响正常的工作节奏之外，希望之后的一段时间，能够多一些对自己所感兴趣内容和领域的输入与输出，能填补一些心中的焦虑，让自己更踏实。&lt;/p&gt;

&lt;h3 id=&quot;未来的一些希望&quot;&gt;未来的一些希望&lt;/h3&gt;

&lt;p&gt;过去一年，自己在工作和生活上相对之前都有一些不小的改变，自己也基本能适应这种改变。希望之后的这不到一年的时间里，自己能够冷静也不缺乏热情地面对工作与生活。&lt;/p&gt;

&lt;p&gt;写下这些文字的时候恰逢2022年青年节(已经被封在家里的第五十二天)，在2019年的时候，看到过一位博主展示了她的家庭教育带来自己的精神支柱，让人记忆深刻，之后的每一年的青年节，我都会想起这段文字。就放在这里，与自己共勉。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://store.skylinebin.com/website%2Fsummary%2FfamilyEducation.jpg&quot; alt=&quot;青年节&quot; /&gt;&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;“妈妈辈的我们，今天也依然在反思总结，认为自己的青春岁月少了一些拼劲，少了坚定的目标，迷茫太多，脚踏实地太少，庆幸的是你现在很努力，知道自己的所思所欲所为，你是一位青年，需要更多的理性思考，坚定自己的目标并为之努力，肯定能成！人更多的时候是自己逼自己，内心强大，才能解决一些问题！生活的标准要健康快乐拼搏，你一定要长成自己想要的样子，这是最好的成功！加油，…，不论咋样，都爱你，加油！”&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;无论如何，至少现在的自己还是青年，如果之后自己有坚持不下去的时候，想想这二十多年的努力，希望自己能多一些前进的动力。&lt;/p&gt;

&lt;p&gt;五四青年节快乐！&lt;/p&gt;

&lt;p&gt;By SkylineBin (2022.05.04)&lt;/p&gt;
</description>
        <pubDate>Thu, 05 May 2022 02:00:31 +0800</pubDate>
        <link>http://localhost:4000/Summaryof2021/</link>
        <guid isPermaLink="true">http://localhost:4000/Summaryof2021/</guid>
        
        <category>Summary</category>
        
        <category>Life</category>
        
        <category>Work</category>
        
        
        <category>SkylineBin</category>
        
      </item>
    
      <item>
        <title>一个节点 继续前行 (2020年终总结)</title>
        <description>&lt;h3 id=&quot;写在前面&quot;&gt;写在前面&lt;/h3&gt;

&lt;p&gt;去年的总结没有写好，有些过度方法论了，有预感今年的也不会太让自己满意，毕竟很久没有写属于自己的文字了。虽然这一年的变化比往年都多很多，却没有做太多自己相关的分享和积累。自己也知道，年龄的增长不是阻止自己分享感受的主要原因，性格和兴致才是。很多时候不是没有时间和灵感，而是没有兴致，工作之后更是这样。&lt;/p&gt;

&lt;h3 id=&quot;见证历史并没有什么用&quot;&gt;见证历史并没有什么用&lt;/h3&gt;

&lt;p&gt;身处某一个时间范围内，可能会不自觉地放大对自己感受的认知。疫情的恐慌，答辩的紧张感，毕业的兴奋与忧虑，入职的新鲜感，这些感受在经历的那个时间段内都是很强烈并且以为会持续很久的，但是不久就会归于平淡，耗费心力去经历与平息那些突如其来的其他感受。就算后面再谈起相关的情节也不会再有那么深刻的感觉。
在今年，终于看完了阿西莫夫的《银河帝国》系列，印象中整套书出现过很多这样的场景，一个或者一小群人所做的小事儿对很长一段时间内所处环境的格局产生巨大的影响，有一个细节在后面才发现，这些推动情节发展的人物本来就不是普通人，都有着被设定好的宿命。现实中大部分人不是这样，只会像作品中的普通人一样在生活细节上发生变化，比如戴口罩。&lt;/p&gt;

&lt;p&gt;我们都是普通人，勇敢地生活着就是在见证历史，所以见证历史并没有什么用。&lt;/p&gt;

&lt;h3 id=&quot;在还是学生的时候&quot;&gt;在还是学生的时候&lt;/h3&gt;

&lt;p&gt;大概五年前的某个冬天，外面天气很好，自己在鉴主某个自习室里写实验报告，写着写着突然蹦出一个想法 这么好的天气，去外面晒晒太阳看看书多好呀，等以后工作了有时间了一定要去好好体验一下这种闲适。那时的自己并不知道，最适合的享受这种闲适的就再想到的那一刻，或者后面的那几年，还是学生的时候。&lt;br /&gt;
有时候想，学生的特征大概可以归纳为，有束缚有保护的围栏，只要按照规则去执行，总有一天能够“出栏”。出栏后，又可能留念那个稳定并见证自己成长的环境。&lt;br /&gt;
不得不承认，自己本质上是不爱学习的。在还是学生的时候，更多的是在按照规则执行该做的是“任务”。一旦不再是这个角色，就会去追寻自己更感兴趣的东西，工作之后这种感觉真实的有些可怕。&lt;/p&gt;

&lt;h3 id=&quot;工作与工作的陷阱&quot;&gt;工作与工作的陷阱&lt;/h3&gt;

&lt;p&gt;关于工作的部分，我觉得自己差一点掉进了工作的陷阱。刚开始工作的几个月，每天下班后就只想着玩一玩儿游戏或者看看视频，不知不觉就会熬到比较晚，第二天醒来去工作，晚上回来又是如此，渐渐以为自己适应了工作。直到自己觉得很久没有看书，也没了支配自己时间的愉悦感时，才发现问题有些不对，这样持续下去自己会被陷进去，既没有成长也不利于身心健康，我将其称为“工作的陷阱”。慢慢回想起这种状态与自己当初选择这份工作的目的和预期是不相符的，自己需要一些变化去调剂现有的状态。后面的几个月，下班后我会尝试学一些自己感兴趣的东西，至少在下班后的时间里有自己的意识，知道自己在做什么，即使没学什么东西，也要让时间过的有些感觉。我觉得这种状态会是很多刚从学生进入工作的同学都会遇到的，希望早些意识到这一点。
我记得，一次闲谈中，同事说和我同龄的同学现在都很少有自己兴趣了，前几年都还有其他爱好，现在都是理财（炒股）了。听到这个，既有些羡慕又有些无奈，这样没啥不好，毕竟谁不喜欢钱呢。那些慢慢失去的爱好，总会有一天因为兴致而拾起来。&lt;/p&gt;

&lt;h3 id=&quot;自己的生活&quot;&gt;自己的生活&lt;/h3&gt;
&lt;p&gt;头发不知不觉就留长了，自己一直不想去剪短。感觉自己的生活也是如此，随意了好多。休息的时候做做饭，看看剧，过着平凡的生活，每天留出一些时间和有趣的人视频感觉也挺好。几个月前就着部门团建的机会第一次体会到了“海阔天空”的场景，这种感觉是很难忘的。体验没有经历过的生活是追求自由的一种方式，这一年算是完成了一些。&lt;/p&gt;

&lt;h3 id=&quot;还有一些希望&quot;&gt;还有一些希望&lt;/h3&gt;
&lt;p&gt;比以前更迫切地希望自己能有所成长，能够做到一定程度的独当一面，无论是工作上还是处理生活的琐事上都更沉稳一些。此外，少一些焦虑，多一些积累和积蓄。空闲的时候多看几本书，也要开始养植物了。多和熟悉的朋友交流，继续学习探索生活的乐趣。今年的总结有些匆忙，希望能够有机会完善和丰富。&lt;/p&gt;

&lt;p&gt;By SkylineBin (2020.12.31)&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Jan 2021 06:40:31 +0800</pubDate>
        <link>http://localhost:4000/Summaryof2020/</link>
        <guid isPermaLink="true">http://localhost:4000/Summaryof2020/</guid>
        
        <category>Summary</category>
        
        <category>Life</category>
        
        <category>Work</category>
        
        
        <category>SkylineBin</category>
        
      </item>
    
      <item>
        <title>工作几个月以来的节点</title>
        <description>&lt;h3 id=&quot;写在前面&quot;&gt;写在前面&lt;/h3&gt;

&lt;p&gt;很久没有认真写总结了，打开自己电脑的 VSCode 时，界面还停留在上次没写完的大学相关的总结上面，那个总结至今还未写完，在这方面对自己是真的有些不满意了。工作之后就是这样，上班仿佛抽干了人所有的精力，下班之后就失去了做很多事情的兴致，刚从学校转变到工作更是如此。前几天应leader的八月份的要求，写了一篇与工作相关的入职三个月总结，里面主要是在公司做的事情不能直接发出来。我觉得单纯从自己的角度也还是要写一篇，记录一下自己刚开始工作这段时间的心路历程，留下一个小的节点。&lt;/p&gt;

&lt;h3 id=&quot;工作这件事儿&quot;&gt;工作这件事儿&lt;/h3&gt;

&lt;p&gt;还没毕业之前，刷过几个月脉脉，当时因为没有身处互联网行业也没真正在公司实习过，看职言不能体会到工作的痛苦。这几个月真正经历了工作却很少刷脉脉了，因为很多东西真实且让人焦虑，本来让人焦虑的事情就很多，在属于自己的时间里更不想主动焦虑，不过有时候看看自己公司的圈子，有些和我同期入职新同学的抱怨，让我感同身受以为是自己发的。过去三个月差不多一直处在适应阶段，并不仅仅是适应自己在公司需要完成的需求，而是对于工作这件事本身的适应。用一句通俗的话描述，工作这段时间自己的状态类似“阶段性水土不服”，具体来说，一段时间里可能激情满满，对生活和未来充满信心，可过段时间就很迷茫和焦虑，想自己未来到底能够成长到哪一步。两种状态穿插在时间线上，并不好受。&lt;/p&gt;

&lt;h4 id=&quot;当前公司的工作体验&quot;&gt;当前公司的工作体验&lt;/h4&gt;
&lt;p&gt;单从在公司工作的体验上来看，工作其实并没有那么痛苦，身边的同学（同事）都是聪明人，具体体现是很少说废话，你说的话大家都能很快理解，效率很高，这一点儿没多少可以挑剔的。还有一个是大多时候没有层级关系的限制，大家合作完成一件事情，保证需求顺利高效稳定地上线，就结束了这个需求带来的联系，这个在最开始的感觉还是很顺滑的。除了后面一个项目有人抢着表现自己是owner，又喜欢开效率不高的会让人很不舒服以外，其他部分没太多可挑剔的点，在公司工作确实让自己看到了与自己职业相关的更大的世界。一定程度上，完善了是对互联网行业的认知。公司的文化真的很适合优秀的工程师，虽然这个有时候也被用来束缚自己。这几个月的工作还算紧凑，基本处于还没完成上一个需求，就要做下一个需求的需求分析，估计这是以后的常态，这一点我也能接受。让人难受的是被倒排的体验，特别是自己什么都不懂的时候就被排好了需求上线的时间，这个真的给了自己很大的心理压力。另一点是能够听到更多有经验并且优秀的人分享技术，让自己处在流动的技术中，在精力不足的时候可以被动地拓宽所了解的技术领域，现阶段的自己还是信息的接收者。&lt;/p&gt;

&lt;h4 id=&quot;工作之后的心态变化&quot;&gt;工作之后的心态变化&lt;/h4&gt;
&lt;p&gt;之前看到过一个讲工作经历的帖子，里面说找工作最大的悲哀是拿了一堆offer却只能去一家公司，然后又都归零，重新开始。最开始工作时，自己在心理上把自己的定位和姿态放在了最低的位置，就是周围的人都比自己学校好技术水平好，迫使自己不得不更快地熟悉公司流程体验自己的价值，这种操作不是长久之计，毕竟自闭久了可能就接受现实了。后来，慢慢发现，技术水平里面有些能力就是信息差和时间，有些能力是智商碾压，后者不能纠结，只能接受现实。前者可以通过积累慢慢补齐，所以我常用周报来安慰自己以重建信心。&lt;/p&gt;

&lt;h4 id=&quot;工作之后生活的变化&quot;&gt;工作之后生活的变化&lt;/h4&gt;
&lt;p&gt;“没有自己的生活。”&lt;br /&gt;
在比较忙的时候，上面这句话很真实，这句话也常被当做从事互联网行业相关从业者的标签，另一个标签是发际线问题。在周末能够有两天假期的大周里，周天还是可以有精力做一些自己的事情。我通常是去附近的公园走走，这个通常目前不多。而只休息一天的小周就真的没有很好的体验了，前一两个月自己一直在适应，现在基本无感了。只能学习更好的时间管理技能，让自己有感兴趣的事情，从而有自己的生活。每天下班后与女朋友视频那段时间算是我唯一能感受到生活的时光了，而我自己有时候还想压榨这个时间去学东西（只是有想法）。每天的工作更多是耗费精力，让自己感觉没有休息，让晚上报复性熬夜，这一点真的不好，必须要想办法做好管理和调整需要的心态建设。&lt;/p&gt;

&lt;h3 id=&quot;这几个月的生活&quot;&gt;这几个月的生活&lt;/h3&gt;

&lt;p&gt;自己一个人离开学校来这个城市生活，第一次拥有自己一个人的小房间，这些都是从未有过的体验，体验过后才能说“不过如此”，当然过程总是新鲜但又不轻松，我觉得这些经历都有一个统一的原则“自己对自己负责”。这一点儿我觉得自己还算努力，找中介看房，自己买喜欢的书架组装，安装喜欢的大桌子，买喜欢的床单被罩，犹豫再三后买自己喜欢的游戏主机，休息时买想吃的菜做饭，这些生活的细微变化，能让我感到发自内心的舒适，这种生活的体验以前几乎是没有的。我觉得这些是现在可以触摸到的自由。总体来说，我喜欢这部分生活。&lt;br /&gt;
当然，也有另外一部分的生活，上班路上骑车摔了自己消毒处理伤口没告诉任何熟悉的人，感冒了两周没好后感觉像是变成了慢性咽炎，小周休息太累的时候除了做饭基本能躺一天，这些生活的细节都挺狼狈却又有些无可奈何。&lt;br /&gt;
总体来说，我已经慢慢适应了这样的生活，虽然还缺乏一定的条理，慢慢来吧。
至于更遥远的将来，很多长期以来的想法我现在还坚持着，毕竟大家都有不同的观念，而观念这个东西很难被改变，自己觉得合适就好，让自己心里觉得踏实一些。&lt;/p&gt;

&lt;p&gt;写这篇文字的时候正好是中秋，自己住的房间能够看到远处的月亮，确实很圆，也想不到其他更多感性的描述。今后这类总结性的文字定位是给自己看，所以也不会有太多不好意思，想要多一些记录生活的细节。此外，之前挖下的坑，含泪也要填完的。&lt;/p&gt;

&lt;p&gt;By SkylineBin (2020.10.01)&lt;/p&gt;
</description>
        <pubDate>Fri, 02 Oct 2020 07:18:31 +0800</pubDate>
        <link>http://localhost:4000/SummaryofLastQuarter/</link>
        <guid isPermaLink="true">http://localhost:4000/SummaryofLastQuarter/</guid>
        
        <category>Life</category>
        
        <category>Summary</category>
        
        <category>Thinking</category>
        
        
        <category>SkylineBin</category>
        
      </item>
    
      <item>
        <title>英语会议期刊论文写作注意事项</title>
        <description>&lt;blockquote&gt; &lt;p&gt;以下内容写于 2018.09.24 by SkylineBin&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;      最近开始着手毕业需要的论文了，虽然思绪还是有一些不清晰，但整体的模型应该算是基本确定下来了，也不能一直看论文，正好实验室读博的学长推荐了一个关于英文论文写作的良心 up 主，看了一部分他提到的英文论文写作技巧(规范)，又结合专业英语时导师讲的一部分内容，整理一下整体的流程和思路，也为后面写作打一点基础。&lt;/p&gt; &lt;p&gt;      其实，一开始看这个写 SCI 系列的视频，我是被这一系列视频的展开逻辑和呈现形式所吸引的。毕竟 SCI 论文也不好发，打着这个名头要有对应的价值。整个系列视频逻辑清晰，形式更像是先写板书后期再配音上去的，并且该加速的时候视频本身已经给加速了。很多东西写出来之后来理解真的会很清晰很多，很多干货满满的技术贴也是一样。图文并茂，逻辑清晰，重点突出，易于理解的文章总是会受欢迎的，看来呈现自己观点和理解的文字还是要练习，还有很多很多优秀的人值得学习。本篇文章记录的顺序基本和系列视频一致，从陈述事实到基于这个事实展开的一篇论文的写作，尽量做到保留原系列视频的逻辑清晰的高度。&lt;/p&gt; &lt;p&gt;&lt;br /&gt;&lt;/p&gt; &lt;h2 id=&quot;facts-事实&quot;&gt;Facts 事实&lt;/h2&gt; &lt;ol&gt; &lt;li&gt;论文结构(Paper Structure) &lt;ul&gt; &lt;li&gt;题目 Title&lt;/li&gt; &lt;li&gt;摘要 Abstract&lt;/li&gt; &lt;li&gt;引言/文献综述 Introduction/Linterature Review&lt;/li&gt; &lt;li&gt;研究方法 Method&lt;/li&gt; &lt;li&gt;结果/讨论 Result/Discussion&lt;/li&gt; &lt;li&gt;结论 Conclusion&lt;/li&gt; &lt;li&gt;参考文献 Reference&lt;/li&gt; &lt;/ul&gt; &lt;/li&gt; &lt;li&gt;行文顺序&lt;/li&gt; &lt;/ol&gt; &lt;table&gt; &lt;thead&gt; &lt;tr&gt; &lt;th style=&quot;text-align: center&quot;&gt;编号&lt;/th&gt; &lt;th style=&quot;text-align: center&quot;&gt;第一步&lt;/th&gt; &lt;th style=&quot;text-align: center&quot;&gt;第二步&lt;/th&gt; &lt;th style=&quot;text-align: center&quot;&gt;第三步&lt;/th&gt; &lt;th style=&quot;text-align: center&quot;&gt;第四步&lt;/th&gt; &lt;th style=&quot;text-align: center&quot;&gt;第五步&lt;/th&gt; &lt;th style=&quot;text-align: center&quot;&gt;第六步&lt;/th&gt; &lt;th style=&quot;text-align: center&quot;&gt;第七步&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; &lt;tr&gt; &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt; &lt;td style=&quot;text-align: center&quot;&gt;Start&lt;/td&gt; &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt; &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt; &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt; &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt; &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt; &lt;td style=&quot;text-align: center&quot;&gt;-&lt;/td&gt; &lt;/tr&gt; &lt;tr&gt; &lt;td...</description>
        <pubDate>Tue, 26 May 2020 18:49:31 +0800</pubDate>
        <link>http://localhost:4000/EnglishPaperWritingSkills/</link>
        <guid isPermaLink="true">http://localhost:4000/EnglishPaperWritingSkills/</guid>
        
        <category>Summary</category>
        
        <category>Papers</category>
        
        <category>Academia</category>
        
        <category>English</category>
        
        
        <category>SkylineBin</category>
        
      </item>
    
      <item>
        <title>一个节点 继续前行 (2019年终总结)</title>
        <description>&lt;h3 id=&quot;写在前面&quot;&gt;写在前面&lt;/h3&gt;

&lt;p&gt;很久没有静下心来写东西了。在开始今年的总结之前，又翻看了前面两年记下的总结，当时的一些想法现在已经不再有了，但还是要感谢那个有些努力并且愿意去思考的自己。最近这段时间知道了如何去经历自己的生活，也失去了很多表达和记录的欲望，这个大概是大多成年人的最终形态吧。节点的作用在于记录和总结已经经历的时间，以避免很久之后忘记那些比较重要的细节或者当时认为很重要的想法。今年也会按照这个思路，理一下自己的想法，然后继续前行。&lt;/p&gt;

&lt;h3 id=&quot;自己与这个世界&quot;&gt;自己与这个世界&lt;/h3&gt;

&lt;p&gt;大佬们在对听众分享自己的经历时总会夹带着一些私货，常是对时事的态度，更多时候的是在传达自己的思考方式以及对这个世界的理解，社会分工越精细就会导致个体理解世界越困难，大佬们还擅长把真相从有趣的事情里面表露出来，如果有人引路，了解这个世界的成本会更低。从这个角度来看无论是公众号，短视频还是Vlog都降低了认识世界的门槛，在此之前是要多读书的，不过唯一不变的大概是主动并且对这个世界还有兴趣。相比于之前几年，自己这一年有了更多次机会来通过实践认识世界。终于也有了早上在宿舍，中午就能出现在另一个城市(今年是北京、上海和杭州)街头的体验，走在另一个的城市更能感受到在社会的毒打下自己与其他人并没有多少区别，都只是在为自己的事情忙碌，甚至忙碌是主动或被动的区别也只存在各自的意识中，成年人的世界是大家都很难，在实践中遵守规则可以让大家稍微轻松一些。作为一位相对坚定的悲观主义者，除了满足自己的兴趣之外，了解这个世界最大的好处是增加安全感，未知带来的恐慌极大可能会让自己盲从，甚至无能狂怒，这些缺乏安全感的行为很多时候是第一反应，了解好的应对策略和运行规律能够帮到自己以及身边的人更多。&lt;/p&gt;

&lt;h3 id=&quot;技术这条路&quot;&gt;技术这条路&lt;/h3&gt;

&lt;p&gt;这一年在技术上有了一点提升，主要是通过秋招补足了一定量的基础知识，搭建了基础的知识体系，然后基本能够做到一定程度的融会贯通。在有了意向之后，从八月开始，想通过面试来检查自己在技术上的不足，参加了差不多近三十家五十次技术面试，一开始总是比较难的，虽然后面也一直很难。最后结果还是能够满意的，毕竟有了很多次与有经验的前辈交流的机会，也得到了很多有用的建议，大多数二面与三面面试官都倾向从项目的整体入手来判断除了基础知识以外的个人能力，在多数大佬看来全栈似乎是理所当然的。后来在线下与思考方式相似的人交流之后也基本能够确定，技术的边界是很难界定的，解决问题是目的也是重要的评判标准。此外，很多之前因为兴趣学的东西在面试中得到了前辈的肯定，这可以被当作是一种激励，主动去尝试并参与是一种非常奇妙的技能。当然，认识到与优秀同学的差距也是这一年在技术上的收获之一，自己目前的顶点其实是大佬们的起点这种感觉并不好受，比较幸运的是大多数差距可以通过开放和共享的知识来慢慢弥补。技术的提升是需要特意留出时间和精力慢慢钻研的，速成的效果并不会太好，琐碎的忙碌往往会掩盖住自己的不足，让自己以为自己很厉害，还是要做出东西吧。人类的本质复读机又出现了，我觉得前一年这一句总结的挺好：做的更多，做的更好，时常练习。&lt;/p&gt;

&lt;h3 id=&quot;学术这个分支&quot;&gt;学术这个分支&lt;/h3&gt;

&lt;p&gt;相比于学习技术，学习做学术在这一年并未给我带来太多乐趣，根本原因还是太菜。年少气盛的时候也不能高估自己的能力，特别是学术能力，开题时确定的实验远比看上去复杂只能不断简化。去年投的会议论文整整一年才检索很让人心酸，因为找工作期刊论文零零散散写了半年也让人很难受，好在也慢慢有了一些自己的东西，实验的部分能够用学到的技术按照模式重写代码来简化流程。这几年的学术研究更像是探索了一个新的领域，按照逻辑大胆给出假设，然后小心翼翼地尝试去验证，中间主要通过看论文去窥探归纳别人是怎么做研究，借鉴和尝试其他领域用过的方法，根据自己需要解决的问题加以改进。整个过程除了保证逻辑和流程没什么问题外，大多时候并没弄明白自己所做的对于已经臃肿的科学探索有什么贡献，有这种想法的小伙伴肯定不止我一个，毕竟我们大多数并没有学术天赋。很遗憾在学术上这一年没有达到前一年所期望的要求，或许是自己过去的要求太高，那就稍稍降低一点儿要求，虽然现在仍然在担心毕不了业。&lt;/p&gt;

&lt;h3 id=&quot;选择与自由&quot;&gt;选择与自由&lt;/h3&gt;

&lt;p&gt;这一年自己对最优解和近似最优解又有了进一步的认识，理论上问题的复杂程度越高，寻找最优解的难度越大(算法性能没有改进的话)，这个时候够用的近似最优解是最佳选择。而现实中的选择还掺杂着复杂的人性判断(得不到的永远有它的优点)，选什么都会后悔，只要没选最差的就都是最好的选择，要安心过自己的生活。这一年也意识到完美主义给追求自由带来的限制，追求完美会让自己的心理压力一直很高，不那么追求完美可以做的快很多，也能得到更多的内心满足，更有可能随心所欲地生活。有意识地做出选择，愿意承担自己所做决定的后果和潜在的困扰，这种自由真的挺好。&lt;/p&gt;

&lt;h3 id=&quot;情感&quot;&gt;情感&lt;/h3&gt;

&lt;p&gt;很幸运，从这一年里的某一天开始我不再是一个人，能够遇到志趣相投又能互相体谅的女生，确实是我的荣幸。本质的善良，天性的温厚，开阔的胸襟一点儿也不少，这种体验充满新奇却又似乎很熟悉。从喜欢到爱是的这个过程，过去很长一段时间我都在摸索却始终没有学会，遇到 GSM 之后的某一天我好像已经学会了。美好的情感来之不易且需要缘分，我从内心愿意认真维护两个人的感情。&lt;br /&gt;
真挚的感情应该地久天长。&lt;br /&gt;
&lt;img src=&quot;https://sdns.skylinebin.com/images/2019/us.jpg&quot; alt=&quot;us&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;这也是生活&quot;&gt;这也是生活&lt;/h3&gt;
&lt;p&gt;这一年里，在生活中有意识地多些变化，这样对维持生活的新鲜感确实有很大的帮助，新的变化总能带来一些小乐趣，这样挺好。虽然在 Tal 的幸福课里学会的时常感激生活中的人和事物只坚持了两个月的时间，留下的记录却能回忆起当时的一些细节，这个做法是可以坚持的。这一年除了技术和学术书之外看了十本想看的书，不多不少。这一年中有了更多次周末上午不去实验室而没心生愧疚，向自己妥协一些并没什么不好。&lt;/p&gt;

&lt;h3 id=&quot;一些希望&quot;&gt;一些希望&lt;/h3&gt;

&lt;p&gt;写到现在也勉强算是一篇完整的总结了，和去年一样又到了31号，今年的执行力比去年差一点点，但也做了很多想做就马上做的事情。今年想明年总是会像去年想今年一样，想要有些新奇的体验，这一年算是实现了大部分。2020年没有什么可以说出来的规划，还是希望自己能静心多读些书，多去体验一些不一样的生活。最后希望明年还没有失去追求新奇的好奇心，也还能保留对探索生活的乐趣。&lt;/p&gt;

&lt;p&gt;By SkylineBin (2019.12.31)&lt;/p&gt;
</description>
        <pubDate>Wed, 01 Jan 2020 06:40:31 +0800</pubDate>
        <link>http://localhost:4000/Summaryof2019/</link>
        <guid isPermaLink="true">http://localhost:4000/Summaryof2019/</guid>
        
        <category>Summary</category>
        
        <category>Life</category>
        
        <category>Work</category>
        
        
        <category>SkylineBin</category>
        
      </item>
    
      <item>
        <title>2019秋招技术点分享总结</title>
        <description>&lt;h2 id=&quot;2019-年秋招前端工程师技术点总结&quot;&gt;2019 年秋招前端工程师技术点总结&lt;/h2&gt; &lt;blockquote&gt; &lt;p&gt;by SkylineBin（2019.11.24）&lt;/p&gt; &lt;/blockquote&gt; &lt;p&gt;上周二的时候给实验室的学弟学妹分享了一下自己今年秋招找工作的经验，分享会讲了挺久，除了讲需要准备的技术知识更多讲的是自己对整个秋招过程的理解和一些特别的经历。实验室的分享会是从上上届开始的，上上届的那位学长(现在在网易)讲的时候我也在场，当时自己刚研一处于想迫切了解互联网的状态，那次的分享会对我的影响还是比较大的。去年的实验室学长学姐的分享会是我组织的，当时找工作的九个人基本都安排了交流，反响也挺好，今年终于轮到我们讲了。在分享会之前，自己整理了一下之前面试那段时间写的面试经历，把出现频率较高的知识点理了一下写了一份文档。所以有了这一份粗略的文档，以下内容是精炼过后的，只会下面的知识点显然不能成为一位优秀的前端工程师，但是作为一名&lt;strong&gt;初级的前端工程师&lt;/strong&gt;不能不会或者没去思考下面的一些基础。&lt;/p&gt; &lt;h3 id=&quot;计算机基础知识含计算机网络操作系统等&quot;&gt;计算机基础知识(含计算机网络，操作系统等)&lt;/h3&gt; &lt;h4 id=&quot;项目基础&quot;&gt;项目基础&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;项目运行环境&lt;/li&gt; &lt;li&gt;版本协同开发&lt;/li&gt; &lt;li&gt;项目运行维护&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&quot;计算机网络&quot;&gt;计算机网络&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;五层结构与 OSI 七层结构模型 以及对应的协议&lt;/li&gt; &lt;li&gt;TCP 协议的细节&lt;/li&gt; &lt;li&gt;UDP 与 TCP 各自的特点与区别&lt;/li&gt; &lt;li&gt;HTTP 协议的响应状态码&lt;/li&gt; &lt;li&gt;HTTP 协议的特点，HTTPS 的协议的优点与特征(1.0，1.1 与&lt;strong&gt;2.0&lt;/strong&gt;…)&lt;/li&gt; &lt;li&gt;DNS 的作用，以及实现流程&lt;/li&gt; &lt;li&gt;计算机网络安全(网络攻击手段)&lt;/li&gt; &lt;li&gt;HTTP 响应的头字段(request 和 response 包含字段的细节)&lt;/li&gt; &lt;li&gt;HTTP 中使用的方法(GET、PUT、OPTIONS等)&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&quot;操作系统&quot;&gt;操作系统&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;进程与线程的区别&lt;/li&gt; &lt;li&gt;线程安全&lt;/li&gt; &lt;li&gt;垃圾回收机制&lt;/li&gt; &lt;li&gt;流量控制与拥塞控制&lt;/li&gt; &lt;/ul&gt; &lt;h3 id=&quot;算法准备&quot;&gt;算法准备&lt;/h3&gt; &lt;h4 id=&quot;知识点&quot;&gt;知识点&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;数据结构：栈，队列，链表，树与二叉树，图&lt;/li&gt; &lt;li&gt;字符串处理&lt;/li&gt; &lt;li&gt;排序算法&lt;/li&gt; &lt;li&gt;递归与非递归&lt;/li&gt; &lt;li&gt;Hash 原理的应用（字典）&lt;/li&gt; &lt;li&gt;BFS 与 DFS&lt;/li&gt; &lt;li&gt;动态规划(一维、二维)&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&quot;练习的内容&quot;&gt;练习的内容&lt;/h4&gt; &lt;p&gt;1.《剑指 Offer》（67 题）&lt;br /&gt; 2.LeetCode (100 题左右)&lt;br /&gt; 3.牛客网互联网公司历年真题&lt;br /&gt; 4.牛客网算法课程（左程云）&lt;/p&gt; &lt;h4 id=&quot;实践平台&quot;&gt;实践平台&lt;/h4&gt; &lt;p&gt;1.&lt;a href=&quot;https://www.nowcoder.com/activity/oj&quot;&gt;牛客网在线编程&lt;/a&gt;&lt;br /&gt; 2.&lt;a href=&quot;https://www.acmcoder.com/&quot;&gt;赛码网&lt;/a&gt;&lt;br /&gt; 3.&lt;a href=&quot;https://leetcode.com/&quot;&gt;LeetCode&lt;/a&gt;&lt;/p&gt; &lt;h4 id=&quot;关于算法的建议&quot;&gt;关于算法的建议&lt;/h4&gt; &lt;p&gt;1.保存自己写的有效代码&lt;/p&gt; &lt;p&gt;2.输入与输出，有自己的风格和练习&lt;/p&gt; &lt;h3 id=&quot;前端技术准备&quot;&gt;前端技术准备&lt;/h3&gt;...</description>
        <pubDate>Sun, 01 Dec 2019 23:29:31 +0800</pubDate>
        <link>http://localhost:4000/ShareMyExperienceAboutFED/</link>
        <guid isPermaLink="true">http://localhost:4000/ShareMyExperienceAboutFED/</guid>
        
        <category>Life</category>
        
        <category>Summary</category>
        
        <category>FED</category>
        
        
        <category>SkylineBin</category>
        
      </item>
    
      <item>
        <title>JavaScript 函数柯里化与反柯里化 </title>
        <description>&lt;h2 id=&quot;javascript-函数柯里化currying与反柯里化uncurrying&quot;&gt;JavaScript 函数柯里化(currying)与反柯里化(uncurrying)&lt;/h2&gt; &lt;h3 id=&quot;javascript-函数柯里化&quot;&gt;JavaScript 函数柯里化&lt;/h3&gt; &lt;p&gt;函数柯里化(function currying) 是高级函数中的一种较为普遍的应用技巧，其基本方法和函数绑定一样，即&lt;strong&gt;使用一个闭包返回一个函数&lt;/strong&gt;。函数柯里化的特点是，当调用柯里化函数时，返回的函数还需要设置一些传入的参数。&lt;/p&gt; &lt;p&gt;柯里化函数常见的动态创建步骤是：&lt;strong&gt;调用另一个函数并为它传入要柯里化的函数和必要参数&lt;/strong&gt;。&lt;/p&gt; &lt;p&gt;通用的柯里化函数写法如下：&lt;/p&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;curry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;innerArgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;arguments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;finalArgs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;concat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerArgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fn&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;apply&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;finalArgs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;add&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;num2&lt;/span&gt;&lt;span...</description>
        <pubDate>Mon, 08 Jul 2019 23:54:21 +0800</pubDate>
        <link>http://localhost:4000/JavaScriptCurryingandUncurrying/</link>
        <guid isPermaLink="true">http://localhost:4000/JavaScriptCurryingandUncurrying/</guid>
        
        <category>JavaScript</category>
        
        <category>Code</category>
        
        <category>FrontEnd</category>
        
        
        <category>SkylineBin</category>
        
      </item>
    
      <item>
        <title>JavaScript 中的数组操作</title>
        <description>&lt;p&gt;本文主要包含两部分，其中前半部分用于整理 JavaScript 中的数组方法。后半部分整理常使用的数组操作。&lt;/p&gt; &lt;h2 id=&quot;javascript-中的数组方法&quot;&gt;JavaScript 中的数组方法&lt;/h2&gt; &lt;h3 id=&quot;es5中处理数组常用方法&quot;&gt;ES5中处理数组常用方法&lt;/h3&gt; &lt;p&gt;处理数组时常使用的方法如下：&lt;/p&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;colors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;green&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt; &lt;h4 id=&quot;转换方法&quot;&gt;转换方法&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;colors.toString()&lt;/strong&gt;&lt;br /&gt; 输出拼接的字符串 “red,blue,green”，原数组不变&lt;/li&gt; &lt;li&gt;&lt;strong&gt;colors.valueOf()&lt;/strong&gt; 返回数组本身 [“red”, “blue”, “green”] ，原数组不变&lt;/li&gt; &lt;li&gt;&lt;strong&gt;colors.join()&lt;/strong&gt;&lt;br /&gt; 返回拼接符号的字符串，原数组不变&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&quot;栈方法&quot;&gt;栈方法&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;colors.push()&lt;/strong&gt;&lt;br /&gt; push 进一项参数，原数组多一项&lt;/li&gt; &lt;li&gt;&lt;strong&gt;colors.pop()&lt;/strong&gt;&lt;br /&gt; 弹出返回最后一项，原有数组少一项&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;栈方法把数组当作一个栈&lt;/p&gt; &lt;h4 id=&quot;队列方法&quot;&gt;队列方法&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;colors.shift()&lt;/strong&gt;&lt;br /&gt; 第一项返回出列，原有数组少一项&lt;/li&gt; &lt;li&gt;&lt;strong&gt;colors.push()&lt;/strong&gt;&lt;br /&gt; push 进数组一项参数&lt;/li&gt; &lt;li&gt;&lt;strong&gt;colors.unshift()&lt;/strong&gt;&lt;br /&gt; 在数组前端添加一项或若干项数据，返回数组长度，数组发生变化&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&quot;重排序方法&quot;&gt;重排序方法&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;colors.reverse()&lt;/strong&gt;&lt;br /&gt; 对数组进行逆序操作，返回的是整个数组&lt;/li&gt; &lt;li&gt;&lt;strong&gt;colors.sort()&lt;/strong&gt; 对数组进行排序操作，可传入比较的函数，返回的是数组本身(已排序)&lt;/li&gt; &lt;/ul&gt; &lt;h4 id=&quot;操作方法&quot;&gt;操作方法&lt;/h4&gt; &lt;ul&gt; &lt;li&gt;&lt;strong&gt;colors.concat(‘black’)&lt;/strong&gt; 返回数组副本，并添加字符串或数组，不影响原数组&lt;/li&gt; &lt;li&gt;&lt;strong&gt;colors.slice()&lt;/strong&gt;&lt;br /&gt; 返回数组指定位置或者范围，不影响原数组&lt;/li&gt; &lt;li&gt;&lt;strong&gt;colors.splice()&lt;/strong&gt;&lt;br /&gt; &lt;strong&gt;删除&lt;/strong&gt;数组指定起始位置的若干项数据 &lt;code...</description>
        <pubDate>Wed, 03 Jul 2019 06:04:21 +0800</pubDate>
        <link>http://localhost:4000/ArrayinJavaScript/</link>
        <guid isPermaLink="true">http://localhost:4000/ArrayinJavaScript/</guid>
        
        <category>JavaScript</category>
        
        <category>Code</category>
        
        <category>FrontEnd</category>
        
        
        <category>SkylineBin</category>
        
      </item>
    
      <item>
        <title>JavaScript 中的this、call 和 apply </title>
        <description>&lt;h2 id=&quot;javascript-中的-thisapplycall&quot;&gt;JavaScript 中的 this,apply,call&lt;/h2&gt; &lt;p&gt;本文主要是对 JavaScript 中常用的 this，apply 和 call 的使用方法和区别进行整理和解析，主要参考了&lt;a href=&quot;http://www.ituring.com.cn/book/1632&quot;&gt;曾探的《JavaScript 设计模式》&lt;/a&gt;中的讲解过程并添加了一些实际使用的细节，以方便使用有遗漏时查阅。&lt;/p&gt; &lt;h3 id=&quot;javascript-中的-this-解析&quot;&gt;JavaScript 中的 this 解析&lt;/h3&gt; &lt;p&gt;JavaScript 中的 this 总是&lt;strong&gt;指向一个对象&lt;/strong&gt;，具体指向哪个对象是&lt;strong&gt;在运行时基于函数的执行环境动态绑定的&lt;/strong&gt;。&lt;/p&gt; &lt;h4 id=&quot;this-的指向&quot;&gt;this 的指向&lt;/h4&gt; &lt;p&gt;在实际应用中，this 的指向大致可以分为以下四种：&lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;作为对象的方法调用&lt;/strong&gt;&lt;br /&gt; 作对象方法调用，this指向该对象本身&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;作为普通函数调用&lt;/strong&gt;&lt;br /&gt; 当函数不作为对象的属性被调用时，就是普通函数方式。此时的 this 总是指向全局对象。浏览器中的全局对象是 window 对象。Node.js 中的 this 是一个空的对象字面量 ‘{}’&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;构造器调用&lt;/strong&gt;&lt;br /&gt; 通常情况，构造器里的this就指向返回的这个对象，如果返回的是个对象字面量，则this指向这个对象，原有通过this声明的属性不再存在&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;strong&gt;Function.prototype.call 或者 Function.prototype.apply 调用&lt;/strong&gt;&lt;br /&gt; Function.prototype.call 或 Function.prototype.apply 可以动态改变传入函数的 this&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;p&gt;以上四种基本囊括了 JavaScript 中所有 this 的用法。&lt;/p&gt; &lt;h4 id=&quot;this-语义的丢失&quot;&gt;this 语义的丢失&lt;/h4&gt; &lt;p&gt;以下代码经常出现：&lt;/p&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;obj&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;MyName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;seven&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;getName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;...</description>
        <pubDate>Mon, 24 Jun 2019 05:42:31 +0800</pubDate>
        <link>http://localhost:4000/ThisandCallandApplyinJavaScript/</link>
        <guid isPermaLink="true">http://localhost:4000/ThisandCallandApplyinJavaScript/</guid>
        
        <category>JavaScript</category>
        
        <category>Code</category>
        
        <category>FrontEnd</category>
        
        
        <category>SkylineBin</category>
        
      </item>
    
      <item>
        <title>JavaScript 中的继承机制</title>
        <description>&lt;h2 id=&quot;javascript-继承&quot;&gt;JavaScript 继承&lt;/h2&gt; &lt;p&gt;本文主要包括 JavaScript 原生继承机制以及 ES6 中 class 使用的 extends 继承。&lt;/p&gt; &lt;h3 id=&quot;javascript-类式继承&quot;&gt;JavaScript 类式继承&lt;/h3&gt; &lt;p&gt;类式继承的核心在于，&lt;strong&gt;通过子类的原型 prototype 对父类实例化来实现&lt;/strong&gt;。即 子类的原型是父类的实例。&lt;/p&gt; &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// 类式继承&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SuperClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;superValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;books&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;JavaScript&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;HTML5&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;CSS3&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// 父类原型上的方法&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SuperClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getSuperValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;superValue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;SubClass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;subValue&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;...</description>
        <pubDate>Wed, 22 May 2019 05:42:31 +0800</pubDate>
        <link>http://localhost:4000/JavaScriptInheritance/</link>
        <guid isPermaLink="true">http://localhost:4000/JavaScriptInheritance/</guid>
        
        <category>JavaScript</category>
        
        <category>Code</category>
        
        <category>FrontEnd</category>
        
        
        <category>SkylineBin</category>
        
      </item>
    
  </channel>
</rss>
